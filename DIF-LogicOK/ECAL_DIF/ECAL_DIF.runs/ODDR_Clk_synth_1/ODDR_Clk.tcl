# 
# Synthesis run script generated by Vivado
# 

set_msg_config  -ruleid {1}  -id {Synth 8-3352}  -string {{CRITICAL WARNING: [Synth 8-3352] multi-driven net Q with 1st driver pin 'Auto_TA_Scan_Inst/SKIROC_Auto_TA_Inst_Chip2/Out_Fifo_Din_reg[1]/Q' [E:/Work_File/CEPC/Logic/DIF-Logic/ECAL_DIF/hdl/SKIROC2_S_Para_Scan.v:495]}}  -suppress 
set_msg_config  -ruleid {2}  -id {Synth 8-3352}  -string {{CRITICAL WARNING: [Synth 8-3352] multi-driven net Q with 2nd driver pin 'GND' [E:/Work_File/CEPC/Logic/DIF-Logic/ECAL_DIF/hdl/SKIROC2_S_Para_Scan.v:495]}}  -suppress 
set_msg_config  -ruleid {3}  -id {Synth 8-5559}  -new_severity {ERROR} 
set_param project.vivado.isBlockSynthRun true
set_msg_config -msgmgr_mode ooc_run
create_project -in_memory -part xc7a100tfgg484-2

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.cache/wt} [current_project]
set_property parent.project_path {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.xpr} [current_project]
set_property XPM_LIBRARIES {XPM_CDC XPM_MEMORY} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo {e:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.cache/ip} [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_ip -quiet {{E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk.xci}}
set_property is_locked true [get_files {{E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk.xci}}]

# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}

set cached_ip [config_ip_cache -export -no_bom -use_project_ipc -dir {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1} -new_name ODDR_Clk -ip [get_ips ODDR_Clk]]

if { $cached_ip eq {} } {

synth_design -top ODDR_Clk -part xc7a100tfgg484-2 -mode out_of_context

#---------------------------------------------------------
# Generate Checkpoint/Stub/Simulation Files For IP Cache
#---------------------------------------------------------
catch {
 write_checkpoint -force -noxdef -rename_prefix ODDR_Clk_ ODDR_Clk.dcp

 set ipCachedFiles {}
 write_verilog -force -mode synth_stub -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ ODDR_Clk_stub.v
 lappend ipCachedFiles ODDR_Clk_stub.v

 write_vhdl -force -mode synth_stub -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ ODDR_Clk_stub.vhdl
 lappend ipCachedFiles ODDR_Clk_stub.vhdl

 write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ ODDR_Clk_sim_netlist.v
 lappend ipCachedFiles ODDR_Clk_sim_netlist.v

 write_vhdl -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ ODDR_Clk_sim_netlist.vhdl
 lappend ipCachedFiles ODDR_Clk_sim_netlist.vhdl

 config_ip_cache -add -dcp ODDR_Clk.dcp -move_files $ipCachedFiles -use_project_ipc -ip [get_ips ODDR_Clk]
}

rename_ref -prefix_all ODDR_Clk_

write_checkpoint -force -noxdef ODDR_Clk.dcp

catch { report_utilization -file ODDR_Clk_utilization_synth.rpt -pb ODDR_Clk_utilization_synth.pb }

if { [catch {
  file copy -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk.dcp} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk.dcp}
} _RESULT ] } { 
  send_msg_id runtcl-3 error "ERROR: Unable to successfully create or copy the sub-design checkpoint file."
  error "ERROR: Unable to successfully create or copy the sub-design checkpoint file."
}

if { [catch {
  write_verilog -force -mode synth_stub {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.v}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create a Verilog synthesis stub for the sub-design. This may lead to errors in top level synthesis of the design. Error reported: $_RESULT"
}

if { [catch {
  write_vhdl -force -mode synth_stub {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.vhdl}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create a VHDL synthesis stub for the sub-design. This may lead to errors in top level synthesis of the design. Error reported: $_RESULT"
}

if { [catch {
  write_verilog -force -mode funcsim {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_sim_netlist.v}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create the Verilog functional simulation sub-design file. Post-Synthesis Functional Simulation with this file may not be possible or may give incorrect results. Error reported: $_RESULT"
}

if { [catch {
  write_vhdl -force -mode funcsim {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_sim_netlist.vhdl}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create the VHDL functional simulation sub-design file. Post-Synthesis Functional Simulation with this file may not be possible or may give incorrect results. Error reported: $_RESULT"
}


} else {


if { [catch {
  file copy -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk.dcp} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk.dcp}
} _RESULT ] } { 
  send_msg_id runtcl-3 error "ERROR: Unable to successfully create or copy the sub-design checkpoint file."
  error "ERROR: Unable to successfully create or copy the sub-design checkpoint file."
}

if { [catch {
  file rename -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk_stub.v} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.v}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create a Verilog synthesis stub for the sub-design. This may lead to errors in top level synthesis of the design. Error reported: $_RESULT"
}

if { [catch {
  file rename -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk_stub.vhdl} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.vhdl}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create a VHDL synthesis stub for the sub-design. This may lead to errors in top level synthesis of the design. Error reported: $_RESULT"
}

if { [catch {
  file rename -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk_sim_netlist.v} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_sim_netlist.v}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create the Verilog functional simulation sub-design file. Post-Synthesis Functional Simulation with this file may not be possible or may give incorrect results. Error reported: $_RESULT"
}

if { [catch {
  file rename -force {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.runs/ODDR_Clk_synth_1/ODDR_Clk_sim_netlist.vhdl} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_sim_netlist.vhdl}
} _RESULT ] } { 
  puts "CRITICAL WARNING: Unable to successfully create the VHDL functional simulation sub-design file. Post-Synthesis Functional Simulation with this file may not be possible or may give incorrect results. Error reported: $_RESULT"
}

}; # end if cached_ip 

if {[file isdir {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.ip_user_files/ip/ODDR_Clk}]} {
  catch { 
    file copy -force {{E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.v}} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.ip_user_files/ip/ODDR_Clk}
  }
}

if {[file isdir {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.ip_user_files/ip/ODDR_Clk}]} {
  catch { 
    file copy -force {{E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.srcs/sources_1/ip/ODDR_Clk/ODDR_Clk_stub.vhdl}} {E:/Work_File/CEPC/Logic/DIF-Logic/DIF-LogicOK 版本/ECAL_DIF/ECAL_DIF.ip_user_files/ip/ODDR_Clk}
  }
}
